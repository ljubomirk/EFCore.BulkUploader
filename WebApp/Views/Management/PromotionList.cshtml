@*
    * TODO:
    *   filter
    *       - map properties to filter view
    *       - submit form
    *   filter button
            - change style on click (transparent, new icon)
    *   date localization
    *       - calendar
    *       - datatable(?)
*@
@model WebApp.ViewModels.PromotionListViewModel;

@{
    ViewData["Title"] = "Promotion List";
    ViewBag.FilterStatus = "closed";
}

<!-- heading -->
<div class="row">
    <h4>
        @CouponDatabase.Properties.Resources.Promotions_Title
        <a href="@Url.Action("CreatePromotion", "Management")" class="waves-effect waves-light btn-flat btn-primary right">
            <i class="material-icons left">add</i>
            @CouponDatabase.Properties.Resources.Btn_CreateNew
        </a>
        <button class="waves-effect waves-light btn-flat btn-default right u-m-r-md" id="btn-filter">
            <i class="material-icons left">unfold_more</i>
            @CouponDatabase.Properties.Resources.Btn_Filter
        </button>
    </h4>
</div>
<!-- /heading -->

<partial name="PromotionFilter" />

@if (Model.Promotions.Count() > 0)
{
    <!-- promotion table -->
    <table id="promotion-list" class="striped highlight">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(m => m.Promotions[0].Code)</th>
                <th>@Html.DisplayNameFor(m => m.Promotions[0].ValidFrom)</th>
                <th>@Html.DisplayNameFor(m => m.Promotions[0].ValidTo)</th>
                <th>@Html.DisplayNameFor(m => m.Promotions[0].HasCoupons)</th>
                <th>@Html.DisplayNameFor(m => m.Promotions[0].Active)</th>
                <th>@Html.DisplayNameFor(m => m.Promotions[0].Enabled)</th>
                <th>&nbsp;</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var p in Model.Promotions)
            {
                <tr>
                    <td>@p.Code</td>
                    <td>@p.ValidFrom.ToString("dd.MM.yyyy")</td>
                    <td>@p.ValidTo.ToString("dd.MM.yyyy")</td>
                    <td>
                        @if (p.HasCoupons)
                        {
                            <i class="material-icons">check</i>
                        }
                    </td>
                    <td>
                        @if (p.Active)
                        {
                            <i class="material-icons">check</i>
                        }
                    </td>
                    <td>
                        @if (p.Enabled)
                        {
                            <i class="material-icons">check</i>
                        }
                    </td>
                    <td>
                        <a class='dropdown-trigger' href='!#' data-id="@p.Id" data-value="@p.Enabled" data-target='promotion-actions'>
                            <i class="material-icons material-icons__hover">more_horiz</i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <!-- /promotion table -->

    <!-- promotion action -->
    <ul id='promotion-actions' class='dropdown-content'>
        <li>
            <a class="action-promo" data-action="Edit" href="">
                <i class="material-icons">create</i>
                @CouponDatabase.Properties.Resources.Btn_Edit
            </a>
        </li>
        <li>
            <a class="action-promo" data-action="AddSeries" href="">
                <i class="material-icons">add</i>
                @CouponDatabase.Properties.Resources.Btn_AddSeries
            </a>
        </li>
        <li id="btn-enable">
            <a class="action-promo" data-action="Enable" href="">
            </a>
        </li>
    </ul>
    <!-- /promotion action -->

    <!-- SCRIPTS -->
    <script src="~/js/datatables.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {

            // init data table
            $('#promotion-list').DataTable({
                pageLength: 10,
                searching: false,
                info: false,
                lengthChange: false,
                pagingType: "full_numbers",
                language: {
                    paginate: {
                        first: '<i class="material-icons">first_page</i>',
                        last: '<i class="material-icons">last_page</i>',
                        next: '<i class="material-icons">chevron_right</i>',
                        previous: '<i class="material-icons">chevron_left</i>'
                    }
                },
                columnDefs: [
                    { orderable: false, targets: -1 }
                ],
                drawCallback: function () {
                    $('.dataTables_paginate > a.paginate_button').addClass('waves-effect');
                }
            });
            // init dropdown menu
            $('.dropdown-trigger').dropdown({
                constrainWidth: false,
                alignment: 'right',
                outDuration: 100,
                onCloseEnd: function () {
                    // this fixes the "3 click bug" when dropbox opens and next click is another dropdown
                    $("body").click();
                }
            });


            // update url with id to corresponding promotion when clicked
            $(".dropdown-trigger").click(function () {
                // base urls
                var urlEdit = "@Url.Action("EditPromotion", "Management")";
                var urlAddSeries = "@Url.Action("AddCouponSeries", "Management")";
                var urlEnable = "@Url.Action("Enable", "Management")";

                // model data
                var id = $(this).attr("data-id");
                var val = $(this).attr("data-value");

                // set styling of enable button
                // set opposite val to current Enable status
                var enableBtn = $("#btn-enable");
                var enableBtnText = $("#btn-enable > a");

                if (val == "True") {
                    val = "False";
                    enableBtn.removeClass("enable");
                    enableBtn.addClass("disable");
                    enableBtnText.html(
                        "<i class='material-icons'>power_settings_new</i>" +
                        "@CouponDatabase.Properties.Resources.Btn_Disable"
                    );

                } else {
                    val = "True";
                    enableBtn.removeClass("disable");
                    enableBtn.addClass("enable");
                    enableBtnText.html(
                        "<i class='material-icons'>power_settings_new</i>" +
                        "@CouponDatabase.Properties.Resources.Btn_Enable"
                    );
                }

                // set correct urls for each promo action
                $(".action-promo").each(function () {
                    var url = "";
                    var action = $(this).attr("data-action");

                    if (action == "Edit") url = urlEdit + "/" + id;
                    else if (action == "AddSeries") url = urlAddSeries + "/" + id;
                    else if (action == "Enable") url = urlEnable + encodeURI("?id=" + id + "&enable=" + val);

                    $(this).attr("href", url);
                })
            })
            // toggle filter
            // change style of button on active state
            $("#btn-filter").click(function () {
                $(".form-filter").slideToggle("slow");
                var filterState = $("#btn-filter").hasClass('btn-transparent');
                if (filterState) {

                    $("#btn-filter").removeClass('btn-transparent');
                    $("#btn-filter i").html('unfold_more');
                    sessionStorage.setItem("FilterStatus", false);
                } else {
                    $("#btn-filter").addClass('btn-transparent');
                    $("#btn-filter i").html('unfold_less');
                }
            });
        });
    </script>
}

