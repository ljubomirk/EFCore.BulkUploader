@model WebApp.ViewModels.PromotionListViewModel;


<div id="form-filter">
    @using (Html.BeginForm("SavePromotion", "Management", FormMethod.Post, new { @class = "form-filter", role = "form", id = "PromotionForm", hidden = true}))
    {
        <div class="row">
            <div class="col s4">
                <div class="u-p-t-lg">
                    <div class="input-field">
                        @Html.EditorFor(f => f.Filter.Code, new { htmlAttributes = new { @class = "validate", @type = "text", placeholder = "" } })
                        @*'By Code' should be put as name property of Filter.Code*@
                        @Html.LabelFor(f => f.Filter.Code, "By Code", new { @class = "active" })
                    </div>
                </div>
            </div>
            <div class="col s8">
                <p class="section-headline">By State</p>
                <p>
                    <label class="checkbox-hover checkbox-hover__inline u-m-r-lg">
                        @Html.CheckBoxFor(f => f.Filter.ShowActive, new { @class = "filled-in" })
                        <span>@Html.DisplayNameFor(f => f.Filter.ShowActive)</span>
                    </label>
                    <label class="checkbox-hover checkbox-hover__inline">
                        @Html.CheckBoxFor(f => f.Filter.ShowInactive, new { @class = "filled-in" })
                        <span>@Html.DisplayNameFor(f => f.Filter.ShowInactive)</span>
                    </label>
                </p>
            </div>
        </div>
        <div class="row u-m-t-negativ">
            <div class="col s4">
                @*'By Property' should be put as name property of Filter.Properties*@
                <p class="section-headline">By Property</p>
                <p class="checkbox-hover">
                    <label>
                        @*@Html.CheckBoxFor(p => p.Filter.Properties.XXXX, new { @class = "filled-in" })
                        <span>@Html.DisplayNameFor(f => f.Filter.Properties.XXXX)</span>*@
                        <input type="checkbox" class="filled-in" />
                        <span>Named holders</span>
                    </label>
                </p>
                <p class="checkbox-hover">
                    <label>
                        @*@Html.CheckBoxFor(p => p.Filter.Properties.XXXX, new { @class = "filled-in" })
                        <span>@Html.DisplayNameFor(f => f.Filter.Properties.XXXX)</span>*@
                        <input type="checkbox" class="filled-in" />
                        <span>Named consumers</span>
                    </label>
                </p>
            </div>
            <div class="col s4">
                <p class="section-headline">&nbsp;</p>
                <p class="checkbox-hover">
                    <label>
                        @*@Html.CheckBoxFor(p => p.Filter.Properties.XXXX, new { @class = "filled-in" })
                        <span>@Html.DisplayNameFor(f => f.Filter.Properties.XXXX)</span>*@
                        <input type="checkbox" class="filled-in" />
                        <span>Unique coupons</span>
                    </label>
                </p>
                <p class="checkbox-hover">
                    <label>
                        @*@Html.CheckBoxFor(p => p.Filter.Properties.XXXX, new { @class = "filled-in" })
                        <span>@Html.DisplayNameFor(f => f.Filter.Properties.XXXX)</span>*@
                        <input type="checkbox" class="filled-in" />
                        <span>Holder is only consumer</span>
                    </label>
                </p>
            </div>

            <div class="col s4">
                <p class="section-headline">&nbsp;</p>
                <p class="checkbox-hover">
                    <label>
                        @*@Html.CheckBoxFor(p => p.Filter.Properties.XXXX, new { @class = "filled-in" })
                        <span>@Html.DisplayNameFor(f => f.Filter.Properties.XXXX)</span>*@
                        <input type="checkbox" class="filled-in" />
                        <span>Allows multiple redeems</span>
                    </label>
                </p>
                <p class="checkbox-hover">
                    <label>
                        @*@Html.CheckBoxFor(p => p.Filter.Properties.XXXX, new { @class = "filled-in" })
                        <span>@Html.DisplayNameFor(f => f.Filter.Properties.XXXX)</span>*@
                        <input type="checkbox" class="filled-in" />
                        <span>Allow coupon series</span>
                    </label>
                </p>
            </div>
        </div>
        <div class="row">
            <div class="input-field date col s4">
                @Html.EditorFor(p => p.Promotions[0].ValidFrom, new { htmlAttributes = new { @class = "calendar validate", @type = "text", placeholder = ""} })
                @Html.LabelFor(p => p.Promotions[0].ValidFrom, new { htmlAttributes = new { @class = "active" } })
                <i class="material-icons suffix">event</i>
                @*<span>@Html.ValidationMessageFor(model => model.Promotion.Code)</span>*@
            </div>
            <div class="input-field date col s4">
                @Html.EditorFor(p => p.Promotions[0].ValidFrom, new { htmlAttributes = new { @class = "calendar validate", @type = "text", placeholder = ""} })
                @Html.LabelFor(p => p.Promotions[0].ValidFrom, new { htmlAttributes = new { @class = "active" } })
                <i class="material-icons suffix">event</i>
                @*<span>@Html.ValidationMessageFor(model => model.Promotion.Code)</span>*@
            </div>
        </div>
        <div class="row">
            <div class="col s12">
                <button id="btn-submit" type="button" data-position="bottom" data-tooltip="Function not implemented" class="waves-effect waves-light btn-flat btn-primary u-m-r-lg">
                    <i class="material-icons left">check</i>
                    @CouponDatabase.Properties.Resources.Btn_ApplyFilters
                </button>
                <a class="waves-effect waves-light btn-flat btn-transparent" id="filter-close">
                    @CouponDatabase.Properties.Resources.Btn_Cancel
                </a>
            </div>
        </div>
    }
</div>

<script src="~/js/calendar.js" asp-append-version="true"></script>
<script>
    $(document).ready(function () {

        // init date picker
        $(".calendar").calendar().change(function (e) {
            // validate date format
            // TODO: regex should be changed depending on locale

            var input = $(this);
            var re = /^[0-9]{2}.[0-9]{2}.[0-9]{4}$/;
            var valid = re.test(e.target.value);
            if (valid) {
                input.removeClass("invalid").addClass("valid");
            }
            else {
                input.removeClass("valid").addClass("invalid");
            }

        });

        // close filter
        $("#filter-close").click(function () {
            $(".form-filter").slideUp("slow");
        })

        // todo tooltip
        $("#btn-submit").tooltip();
    });

</script>