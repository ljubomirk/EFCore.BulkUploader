@*
    ROLE: displays part of form that handles generating coupon series
*@

@using Microsoft.AspNetCore.Html;
@model WebApp.ViewModels.CouponSeriesViewModel;

<section id="coupon-generate">
    <div class="row">
        <div class="col s12">
            <h5 class="section u-m-t-remove">Coupon Format</h5>
        </div>
        <div class="input-field col s3">
            @Html.EditorFor(p => p.Prefix, new { htmlAttributes = new { @type = "text", placeholder = "", @autocomplete = "off" } })
            @Html.LabelFor(p => p.Prefix, new { htmlAttributes = new { @class = "active" } })
            @ValidationHelper(ViewData, "Prefix", false)
            <p class="checkbox-hover">
                <label>
                    @Html.CheckBoxFor(p => p.CouponWithLetters, new { @class = "filled-in" })
                    <span>Use letters</span>
                </label>
            </p>
        </div>
        <div class="input-field col s3">
            @Html.EditorFor(p => p.Suffix, new { htmlAttributes = new { @type = "text", placeholder = "", @autocomplete = "off" } })
            @Html.LabelFor(p => p.Suffix, new { htmlAttributes = new { @class = "active" } })
            @ValidationHelper(ViewData, "Suffix", false)
            <p class="checkbox-hover">
                <label>
                    @Html.CheckBoxFor(p => p.CouponWithNumbers, new { @class = "filled-in" })
                    <span>Use numbers</span>
                </label>
            </p>
        </div>
        <div class="col s6">
            <button type="button" class="waves-effect waves-light btn-flat btn-default btn-subtract commando-primary-text left u-m-t-md-btnGroup"><i class="material-icons">remove</i></button>
            <div class="input-field col s4">
                @Html.EditorFor(p => p.CouponMaxLength, new { htmlAttributes = new { @type = "text", placeholder = "", @autocomplete = "off" } })
                @Html.LabelFor(p => p.CouponMaxLength, new { htmlAttributes = new { @class = "active" } })
                @ValidationHelper(ViewData, "CouponMaxLength", false)
            </div>
            <button type="button" class="waves-effect waves-light btn-flat btn-default btn-add commando-primary-text u-m-l-sm u-m-t-md-btnGroup"><i class="material-icons">add</i></button>
        </div>
    </div>
    <div class="row u-m-t-md">
        <div class="input-field col s6">
            <input placeholder="" class="example-coupon" type="text" disabled>
            <label class="active" for="example">Example Coupon</label>
        </div>
        <div class="col s6">
            <button type="button" class="waves-effect waves-light btn-flat btn-default btn-subtract commando-primary-text left u-m-t-md-btnGroup"><i class="material-icons">remove</i></button>
            <div class="input-field col s4">
                @Html.EditorFor(p => p.NumberOfCoupons, new { htmlAttributes = new { @type = "text", placeholder = "", @autocomplete = "off" } })
                @Html.LabelFor(p => p.NumberOfCoupons, new { htmlAttributes = new { @class = "active" } })
                @ValidationHelper(ViewData, "NumberOfCoupons", false)
            </div>
            <button type="button" class="waves-effect waves-light btn-flat btn-default btn-add commando-primary-text u-m-l-sm u-m-t-md-btnGroup"><i class="material-icons">add</i></button>
        </div>
    </div>
    <div class="row">
        <div class="col s12">
            <button type="submit" class="waves-effect waves-light btn-flat btn-primary u-m-r-md" data-position="bottom" data-tooltip="Not implemented!">
                <i class="material-icons left">check</i>
                @CouponDatabase.Properties.Resources.Btn_Generate
            </button>
        </div>
    </div>
</section>


@functions{
    /// <summary>
    /// Validation messages helper
    /// </summary>
    /// <param name="viewData">Context</param>
    /// <param name="property">Model property</param>
    /// <param name="date">Bool for date input validation</param>
    /// <returns>Icon displaying validation messages inside tooltip</returns>
    /// <remarks>If date input, it returns an icon</remarks>
    public static HtmlString ValidationHelper(ViewDataDictionary context, string property, bool date)
    {
        if (context.ModelState[property] != null && context.ModelState[property].Errors.Any())
        {
            string msg = "";
            for (int i = 0; i < context.ModelState[property].Errors.Count; i++)
            {
                msg += context.ModelState[property].Errors[i].ErrorMessage;
            }
            msg.Trim();

            return new HtmlString(@"<i class='material-icons suffix validation-error' data-position='bottom' data-tooltip='" + msg + "'>warning</i>");
        }
        else if (date)
        {
            return new HtmlString(@"<i class='material-icons suffix date-icon'>event</i>");
        }
        return null;
    }
}