@model WebApp.ViewModels.PromotionDetailsViewModel;
@{
    ViewData["Title"] = "Promotion Details";

    // initial state
    string strTitle = CouponDatabase.Properties.Resources.Promotion_TitleCreate;
    string strAllowIssuer = CouponDatabase.Properties.Resources.Promotion_AllowedIssuer;
    string strAllowUser = CouponDatabase.Properties.Resources.Promotion_AllowedUser;
    string strProperties = CouponDatabase.Properties.Resources.Promotion_Properties;
    string strStatus = CouponDatabase.Properties.Resources.Promotion_StatusEnabled;
    string hasEndDateChk = ""; // checkbox for date picker
    string hasEndDate = "disabled"; // ValidTo date picker - used as a className


    if (Model.Promotion != null)
    {
        strTitle = @CouponDatabase.Properties.Resources.Promotion_TitleEdit;

        // if there is an end date, this will enable date input field and check checkbox
        if (Model.Promotion.ValidTo != null)
        {
            hasEndDate = "";
            hasEndDateChk = "checked";
        }

        //TODO: change strStatus if promo is disabled
        //if(Model.Promotion.isEnabled == false)
        //{
        //    strStatus = CouponDatabase.Properties.Resources.Promotion_StatusDisabled;
        //}
    }
}

    <div class="container">

        @using (Html.BeginForm("SavePromotion", "Management", FormMethod.Post, new { role = "form", id = "PromotionForm" }))
        {
            @Html.HiddenFor(p => p.Promotion.Id)
            <div class="row">
                <h4>
                    @strTitle
                    <a href="@Url.Action("ListPromotions", "Management")" class="waves-effect waves-light btn-flat btn-default right"><i class="material-icons">clear</i></a>
                    <span class="switch right">
                        <label>
                            @strStatus
                            @Html.EditorFor(p => p.Promotion.Enabled, new { htmlAttributes = new { @type = "checkbox" } })
                            <span class="lever"></span>
                        </label>
                    </span>
                </h4>
            </div>
            @if (ViewBag.CommandStatus == "[ERROR]")
            {
                <span class="red-text">@ViewBag.CommandStatus  @ViewBag.CommandMessage</span>
            }
            else
            {
                <span class="green-text">@ViewBag.CommandStatus  @ViewBag.CommandMessage</span>
            }

            <div class="form-box">
                <div class="row">
                    <div class="row">
                        <div class="input-field date col s6">
                            @Html.EditorFor(p => p.Promotion.Code, new { htmlAttributes = new { @class = "validate", @type = "text", placeholder = "", @required = "required" } })
                            @Html.LabelFor(p => p.Promotion.Code, new { htmlAttributes = new { @class = "active" } })
                            @*<span>@Html.ValidationMessageFor(model => model.Promotion.Code)</span>*@
                        </div>
                    </div>
                    <div class="input-field col s6">
                        @Html.EditorFor(p => p.Promotion.ValidFrom, new { htmlAttributes = new { @class = "calendar", @type = "text", placeholder = "", @required = "required" } })
                        @Html.LabelFor(p => p.Promotion.ValidFrom, new { htmlAttributes = new { @class = "active" } })
                        <i class="material-icons suffix">event</i>
                    </div>
                    <div class="input-field col s6">
                        <!--a bit of a hack just to add disabled in htmlAttr...-->
                        @if (hasEndDate != "disabled")
                        {
                            @Html.EditorFor(p => p.Promotion.ValidTo, new { htmlAttributes = new { @class = "calendar", @type = "text", @id = "ValidTo", placeholder = "" } })
                        }
                        else
                        {
                            @Html.EditorFor(p => p.Promotion.ValidTo, new { htmlAttributes = new { @class = "calendar", @type = "text", @id = "ValidTo", placeholder = "", @disabled = true } })
                        }
                        @Html.LabelFor(p => p.Promotion.ValidTo, new { htmlAttributes = new { @class = "active" } })
                        <i id="icon-endDate" class="material-icons suffix @hasEndDate">event</i>
                    </div>
                    <div class="col s12">
                        <p class="u-m-t-remove">
                            <label id="chk-endDate">
                                <input type="checkbox" class="filled-in" @hasEndDateChk />
                                <span>@CouponDatabase.Properties.Resources.Promotion_SetEndDateChkLabel</span>
                            </label>
                        </p>
                    </div>
                    <div class="col s6">
                        <p class="section-headline">@strAllowIssuer</p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Salesforce</span>
                            </label>
                        </p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>POS</span>
                            </label>
                        </p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Telesales</span>
                            </label>
                        </p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Webshop</span>
                            </label>
                        </p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Selfcare</span>
                            </label>
                        </p>
                    </div>
                    <div class="col s6">
                        <p class="section-headline">@strAllowUser</p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Salesforce</span>
                            </label>
                        </p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Webshop</span>
                            </label>
                        </p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Selfcare</span>
                            </label>
                        </p>
                    </div>
                </div>


                <div class="row">
                    <div class="col s12">
                        <p class="section-headline u-m-b-remove">@strProperties</p>
                    </div>
                    <div class="col s6">
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Unique coupons</span>
                            </label>
                        </p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Named holders</span>
                            </label>
                        </p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Named consumers</span>
                            </label>
                        </p>
                    </div>
                    <div class="col s6">
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Holder is only consumer</span>
                            </label>
                        </p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Allows multiple redeems</span>
                            </label>
                        </p>
                        <p>
                            <label>
                                <input type="checkbox" class="filled-in" />
                                <span>Allow coupon series</span>
                            </label>
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col s12">

                        <!-- set controls depending if model is present or not -->
                        @if (Model.Promotion == null)
                        {
                            <button type="submit" class="waves-effect waves-light btn-flat commando-primary white-text u-m-r-md">
                                <i class="material-icons left">check</i>
                                @CouponDatabase.Properties.Resources.Btn_Create
                            </button>
                            <a class="waves-effect waves-light btn-flat btn-default commando-primary-text">
                                <i class="material-icons left">arrow_forward</i>
                                @CouponDatabase.Properties.Resources.Btn_CreateAndAddSeries
                            </a>
                        }
                        else
                        {
                            <a class="waves-effect waves-light btn-flat commando-primary white-text u-m-r-md">
                                <i class="material-icons left">add</i>
                                @CouponDatabase.Properties.Resources.Btn_AddSeries
                            </a>
                            <button type="submit" class="waves-effect waves-light btn-flat btn-default">
                                <i class="material-icons left">save</i>
                                @CouponDatabase.Properties.Resources.Btn_SaveChanges
                            </button>
                            <a class="waves-effect waves-light btn-flat btn-danger  right">
                                <i class="material-icons left">delete_forever</i>
                                @CouponDatabase.Properties.Resources.Btn_Delete
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

<script src="~/js/calendar.js" asp-append-version="true"></script>
<script>
    $(document).ready(function () {
        // init date picker
        $('.calendar').calendar().change(function (e) {
            // validate date format
            // TODO: regex should be changed depending on locale

            var input = $(this);
            var re = /^[0-9]{2}.[0-9]{2}.[0-9]{4}$/;
            var valid = re.test(e.target.value);
            if (valid) {
                input.removeClass("invalid").addClass("valid");
            }
            else {
                input.removeClass("valid").addClass("invalid");
            }

        });

        // enable end date input field
        $("label#chk-endDate").click(function () {
            if ($("input", this).prop("checked")) {
                $("#ValidTo").attr("disabled", false);
                $("#icon-endDate").removeClass("disabled");
            } else {
                $("#ValidTo").val("");
                $("#ValidTo").removeClass("valid invalid");
                $("#ValidTo").attr("disabled", true);
                $("#icon-endDate").addClass("disabled");
            }
        })
    });

</script>


