@model WebApp.ViewModels.LifecycleUpdateViewModel;

@{
    ViewData["Title"] = "_UpdateModal";
}

<!-- Modal -->
<div id="modal-confirmation" class="modal">
    <div class="modal-content">
        <h4>Change (<span id="coupon-number-modal"></span>) coupons?</h4>
        <dl class="inline">
            <dt class="info-customer hiddendiv">
                @string.Format(@CouponDatabase.Properties.Resources.CouponsModal_SetTo, Html.DisplayNameFor(m => m.Customer))
            </dt>
            <dd class="info-customer hiddendiv"></dd>
            <dt class="info-validto hiddendiv">
                @string.Format(@CouponDatabase.Properties.Resources.CouponsModal_SetTo, Html.DisplayNameFor(m => m.ValidTo))
            </dt>
            <dd class="info-validto hiddendiv"></dd>
            <dt class="info-enabled hiddendiv">    
                @string.Format(@CouponDatabase.Properties.Resources.CouponsModal_SetTo, Html.DisplayNameFor(m => m.Enabled))
            </dt>
            <dd class="info-enabled hiddendiv"></dd>
            <dt class="info-status hiddendiv">
                @string.Format(@CouponDatabase.Properties.Resources.CouponsModal_SetTo, Html.DisplayNameFor(m => m.Status))
            </dt>
            <dd class="info-status hiddendiv"></dd>
        </dl>
    </div>
    <div class="modal-footer">
        <a id="modal-close" class="modal-close waves-effect waves-light btn-flat btn-transparent u-m-r-md">
            @CouponDatabase.Properties.Resources.Btn_Cancel
        </a>
        <button type="submit" class="waves-effect waves-light btn-flat btn-primary u-m-r-md" data-position="bottom">
            @CouponDatabase.Properties.Resources.Btn_Update
        </button>
    </div>
</div>
<!-- /Modal-->

<script>
    $(document).ready(function () {

        // update modal text
        $(".input-coupon").change(function (e) {
            var val = e.target.value;
            var property = this.getAttribute("data-modal");
            var fieldName = (property == "validto") ? "valid to" : property;
            var info = $(".info-" + property);
            var infoVal = $("dd.info-" + property);
            var type = this.getAttribute("data-type");

            //check if it was select and get value from html
            if (type == "select") {
                var selectId = this.getAttribute("data-id");
                val = $('[data-id="' + selectId + '"] > option[value=' + val + ']').html();
            }

            if (!val && info.length > 0) {
                info.addClass("hiddendiv");
            } else  {
                info.removeClass("hiddendiv");
                infoVal.html(val);
            } 
        })

        // display number of checked items inside modal header
        $(".checkbox-coupon, #checkbox-master").change(function () {
            var num = $("input:checked.checkbox-coupon").length;
            if (num > 0) {
                $("#coupon-number-modal").text(num);
            } else {
                $("#coupon-number-modal").text('');
            }
        })
    })
</script>
