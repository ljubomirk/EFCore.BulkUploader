@model WebApp.ViewModels.LifecycleUpdateViewModel;
@using CouponDatabase.Lifecycle;
@{
    ViewData["Title"] = "LifecycleTable";
}

<!-- coupon table -->
<table data-nosort-target="0" id="coupon-list" class="striped highlight">
    <thead>
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(m => m.CouponList.Coupon.Code)
                <img src="~/images/sorting_hidden.png" class="sorting-icon" />
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CouponList.Coupon.Holder)
                <img src="~/images/sorting_hidden.png" class="sorting-icon" />
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CouponList.Coupon.User)
                <img src="~/images/sorting_hidden.png" class="sorting-icon" />
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CouponList.Coupon.AquireFrom)
                <img src="~/images/sorting_hidden.png" class="sorting-icon" />
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CouponList.Coupon.AquireTo)
                <img src="~/images/sorting_hidden.png" class="sorting-icon" />
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CouponList.Coupon.AwardFrom)
                <img src="~/images/sorting_hidden.png" class="sorting-icon" />
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CouponList.Coupon.AwardTo)
                <img src="~/images/sorting_hidden.png" class="sorting-icon" />
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CouponList.Coupon.Enabled)
                <img src="~/images/sorting_hidden.png" class="sorting-icon" />
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CouponList.Coupon.Status)
                <img src="~/images/sorting_hidden.png" class="sorting-icon" />
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CouponList.Coupon.Active)
                <img src="~/images/sorting_hidden.png" class="sorting-icon" />
            </th>
        </tr>
    </thead>

    <tbody>
        @for (int i = 0; i < Model?.CouponList?.CouponItems?.Count; i++)
        {
            string statusText = ((CouponStatus)Model.CouponList.CouponItems[i].Status).ToString();
        <tr>
            <td>
                <label>
                    @Html.CheckBoxFor(c => Model.CouponList.CouponItems[i].Checked, new { @class = "filled-in checkbox-coupon" })
                    <span></span>
                    @Html.HiddenFor(c => c.CouponList.CouponItems[i].Id)
                    @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
                </label>
            </td>
            <td>
                @Html.DisplayFor(item => item.CouponList.CouponItems[i].Code)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Code)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
            </td>
            <td>
                @Html.DisplayFor(item => item.CouponList.CouponItems[i].Holder)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Holder)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
            </td>
            <td>
                @Html.DisplayFor(item => item.CouponList.CouponItems[i].User)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].User)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
            </td>
            <td>
                @Html.DisplayFor(item => item.CouponList.CouponItems[i].AwardFrom)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].AwardFrom)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
            </td>
            <td>
                @Html.DisplayFor(item => item.CouponList.CouponItems[i].AwardTo)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].AwardTo)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
            </td>
            <td>
                @Html.DisplayFor(item => item.CouponList.CouponItems[i].AquireFrom)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].AquireFrom)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
            </td>
            <td>
                @Html.DisplayFor(item => item.CouponList.CouponItems[i].AquireTo)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].AquireTo)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
            </td>

            <td>
                @if (Model.CouponList.CouponItems[i].Enabled)
                {
                    <i class="material-icons">check</i>
                    @Html.HiddenFor(c => c.CouponList.CouponItems[i].Enabled)
                    @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
                }
            </td>
            <td>
                @Html.DisplayFor(item => statusText)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Status)
                @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
            </td>
            <td>
                @if (Model.CouponList.CouponItems[i].Active)
                {
                    <i class="material-icons">check</i>
                    @Html.HiddenFor(c => c.CouponList.CouponItems[i].Active)
                    @Html.HiddenFor(c => c.CouponList.CouponItems[i].Label)
                }
            </td>
        </tr>
        }
    </tbody>
</table>
<!-- /coupon table -->

<script src="~/js/datatables.js" asp-append-version="true"></script>
<script src="~/js/dataTables.buttons.min.js" asp-append-version="true"></script>
<script src="~/js/jszip.min.js" asp-append-version="true"></script>
<script src="~/js/buttons.html5.min.js" asp-append-version="true"></script>
<script>
    $(document).ready(function () {

        // check changes on update params, update modal text and enable action
        $(".input-coupon").change(enableModalTrigger);
        // display number of checked items and enable action
        $(".checkbox-coupon").change(function () {
            var num = getChecked();
            setMaterCheckbox(num);
            enableModalTrigger();
        })



       

        // enable or disable action button (_CouponsFilter)
        function enableModalTrigger() {
            var btn = $("#modal-trigger");
            var inputVal = getInputs();
            var chkVal = getChecked();

            if (inputVal > 0 && chkVal > 0) {
                btn.removeAttr("disabled")
            } else {
                btn.attr("disabled", true);
            }
        }

        
        // get number of checked items
        function getChecked() {
            return $("input:checked.checkbox-coupon").length;
        }
        // get number of input items that have value
        function getInputs() {
            return $(".input-coupon").filter(function () {
                return $(this).val();
            }).length
        }
    });

</script>