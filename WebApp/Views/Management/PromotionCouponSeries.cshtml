@model WebApp.ViewModels.CouponSeriesViewModel;
@{
}

@using (Html.BeginForm("GenerateCoupons", "Management", FormMethod.Post, new { role = "form", id = "PromotionForm" }))
{
    @Html.HiddenFor(p => p.PromotionId)
    <div class="container">
        <div class="row">
            <h4>
                Create Coupon Series
                <a href="@Url.Action("ListPromotions", "Management")" class="waves-effect waves-light btn-flat btn-default commando-primary-text right">
                    @CouponDatabase.Properties.Resources.Btn_Cancel
                    <i class="material-icons right">clear</i>
                </a>
            </h4>
        </div>
    </div>

    <div class="form-box">
        <div class="container">
            <div class="@(ViewBag.CommandStatus == "[ERROR]" ? "form-box__msg form-box__msg-error" : "form-box__msg form-box__msg-success") @(ViewBag.CommandStatus == null ? "hiddendiv" : "")">@ViewBag.CommandStatus  @ViewBag.CommandMessage</div>
            <div class="row u-m-b-remove">
                <div class="row">
                    <div class="input-field col s6">
                        <input placeholder="" id="serialNumber" type="text" disabled>
                        <label class="active" for="serialNumber">Series Number</label>
                        @*<i class="material-icons validation-error suffix" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                    </div>
                </div>
                <div class="input-field date col s6">
                    @*<input placeholder="" id="assignableFrom" class="calendar" type="text" />
                        <label class="active" for="assignableFrom">Assignable From</label>*@
                    @Html.EditorFor(p => p.AssignableFrom, new { htmlAttributes = new { @class = "calendar", @type = "text", placeholder = "", @required = "required", @autocomplete = "off" } })
                    @Html.LabelFor(p => p.AssignableFrom, new { htmlAttributes = new { @class = "active" } })
                    <i id="icon-endDate" class="material-icons suffix">event</i>
                    @*<i class="material-icons validation-error suffix" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                </div>
                <div class="input-field date col s6">
                    @*<input placeholder="" id="assignableUntil" class="calendar" type="text" />
                        <label class="active" for="assignableUntil">Assignable Until</label>*@
                    @Html.EditorFor(p => p.AssignableUntil, new { htmlAttributes = new { @class = "calendar", @type = "text", placeholder = "", @required = "required", @autocomplete = "off" } })
                    @Html.LabelFor(p => p.AssignableUntil, new { htmlAttributes = new { @class = "active" } })
                    <i id="icon-endDate" class="material-icons suffix">event</i>
                    @*<i class="material-icons validation-error suffix" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                </div>
                <div class="input-field date col s6 u-m-b-remove">
                    @*<input placeholder="" id="redeemableFrom" class="calendar" type="text" />
                        <label class="active" for="redeemableFrom">Redeemable From</label>*@
                    @Html.EditorFor(p => p.RedeemableFrom, new { htmlAttributes = new { @class = "calendar", @type = "text", placeholder = "", @required = "required", @autocomplete = "off" } })
                    @Html.LabelFor(p => p.RedeemableFrom, new { htmlAttributes = new { @class = "active" } })
                    <i id="icon-endDate" class="material-icons suffix">event</i>
                    @*<i class="material-icons validation-error suffix" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                </div>
                <div class="input-field date col s6 u-m-b-remove">
                    @*<input placeholder="" id="redeemableUntil" class="calendar" type="text" />
                        <label class="active" for="redeemableUntil">Redeemable Until</label>*@
                    @Html.EditorFor(p => p.RedeemableUntil, new { htmlAttributes = new { @class = "calendar", @type = "text", placeholder = "", @required = "required", @autocomplete = "off" } })
                    @Html.LabelFor(p => p.RedeemableUntil, new { htmlAttributes = new { @class = "active" } })
                    <i id="icon-endDate" class="material-icons suffix">event</i>
                    @*<i class="material-icons validation-error suffix" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                </div>
            </div>
            <div class="row">
                <div class="col s12">
                    <p class="section-headline u-m-t-remove">Current Status</p>

                    <div class="radio-buttons-wrapper">
                        <input type="radio" class="radio-button-group" name="currentStatus" value="1" id="button1" checked />
                        <label for="button1">Created</label>
                        <input type="radio" class="radio-button-group" name="currentStatus" value="2" id="button2" />
                        <label for="button2">Issued</label>
                        <input type="radio" class="radio-button-group" name="currentStatus" value="3" id="button3" disabled />
                        <label for="button3">Redeemed</label>
                        <input type="radio" class="radio-button-group" name="currentStatus" value="4" id="button4" />
                        <label for="button4">Canceled</label>
                    </div>
                </div>
            </div>

            <!-- options -->
            <div class="row">
                <div class="col s12">
                    <div class="nav-extended">
                        <div class="nav-content">
                            <ul class="tabs-section tabs-transparent tabs-coupons">
                                <li id="tab-init" class="tab first tab-coupon"><a class="active" href="#coupon-generate">Generate</a></li>
                                <li class="tab last tab-coupon"><a href="#coupon-import">Import</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /options -->
            <!-- generate -->
            <section id="coupon-generate">
                <div class="row">
                    <div class="col s12">
                        <h5 class="section u-m-t-remove">Coupon Format</h5>
                    </div>
                    <div class="input-field col s3">
                        @*<input placeholder="" id="prefix" type="text" class="disabled">
                            <label class="active" for="prefix">Prefix</label>*@
                        @Html.EditorFor(p => p.Prefix, new { htmlAttributes = new { @type = "text", placeholder = "", @autocomplete = "off" } })
                        @Html.LabelFor(p => p.Prefix, new { htmlAttributes = new { @class = "active" } })
                        @*<i class="material-icons validation-error suffix" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                        <p class="checkbox-hover">
                            <label>
                                @*<input type="checkbox" class="filled-in" />*@
                                @Html.CheckBoxFor(p => p.CouponWithLetters, new { @class = "filled-in" })
                                <span>Use letters</span>
                            </label>
                        </p>
                    </div>
                    <div class="input-field col s3">
                        @*<input placeholder="" id="suffix" type="text" class="disabled">
                            <label class="active" for="suffix">Suffix</label>*@
                        @Html.EditorFor(p => p.Suffix, new { htmlAttributes = new { @type = "text", placeholder = "", @autocomplete = "off" } })
                        @Html.LabelFor(p => p.Suffix, new { htmlAttributes = new { @class = "active" } })
                        @*<i class="material-icons validation-error suffix" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                        <p class="checkbox-hover">
                            <label>
                                @*<input type="checkbox" class="filled-in" />*@
                                @Html.CheckBoxFor(p => p.CouponWithNumbers, new { @class = "filled-in" })
                                <span>Use numbers</span>
                            </label>
                        </p>
                    </div>
                    <div class="col s6">
                        <button type="button" class="waves-effect waves-light btn-flat btn-default btn-subtract commando-primary-text left u-m-t-md-btnGroup"><i class="material-icons">remove</i></button>
                        <div class="input-field col s4">
                            @*<input placeholder="" id="characterLength" type="number" class="validate">
                                <label class="active label-offsetPosition" for="characterLength">Character Length</label>*@
                            @Html.EditorFor(p => p.CouponMaxLength, new { htmlAttributes = new { @type = "text", placeholder = "", @autocomplete = "off" } })
                            @Html.LabelFor(p => p.CouponMaxLength, new { htmlAttributes = new { @class = "active" } })
                            @*<i class="material-icons validation-error suffix" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                        </div>
                        <button type="button" class="waves-effect waves-light btn-flat btn-default btn-add commando-primary-text u-m-l-sm u-m-t-md-btnGroup"><i class="material-icons">add</i></button>
                    </div>
                </div>
                <div class="row u-m-t-md">
                    <div class="input-field col s6">
                        <input placeholder="" class="example-coupon" type="text" disabled>
                        <label class="active" for="example">Example Coupon</label>
                        @*<i class="material-icons validation-error suffix" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                    </div>
                    <div class="col s6">
                        <button type="button" class="waves-effect waves-light btn-flat btn-default btn-subtract commando-primary-text left u-m-t-md-btnGroup"><i class="material-icons">remove</i></button>
                        <div class="input-field col s4">
                            @*<input placeholder="" id="numberOfCoupons" type="number" class="validate">
                                <label class="active label-offsetPosition" for="numberOfCoupons">Number of Coupons</label>*@
                            @Html.EditorFor(p => p.NumberOfCoupons, new { htmlAttributes = new { @type = "text", placeholder = "", @autocomplete = "off" } })
                            @Html.LabelFor(p => p.NumberOfCoupons, new { htmlAttributes = new { @class = "active" } })
                            @*<i class="material-icons validation-error suffix" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                        </div>
                        <button type="button" class="waves-effect waves-light btn-flat btn-default btn-add commando-primary-text u-m-l-sm u-m-t-md-btnGroup"><i class="material-icons">add</i></button>
                    </div>
                </div>
                <div class="row">
                    <div class="col s12">
                        <button type="submit" class="waves-effect waves-light btn-flat btn-primary u-m-r-md" data-position="bottom" data-tooltip="Not implemented!">
                            <i class="material-icons left">check</i>
                            @CouponDatabase.Properties.Resources.Btn_Generate
                        </button>
                    </div>
                </div>
            </section>
            <!-- /generate-->
            <!-- import -->
            <section id="coupon-import">
                <div class="row">
                    <div id="file-name-holder" class="input-field date col s6">
                        <input id="file-name" placeholder="" class="" type="text" disabled />
                    </div>
                    <div class="col s6">
                        <div class="file-field-input input-field">
                            <button id="btn-file-input" type="button" class="waves-effect waves-light btn-flat btn-default-primary">
                                <i class="material-icons left">file_upload</i>
                                @CouponDatabase.Properties.Resources.Btn_SelectFile
                            </button>
                            <input id="file-input" type="file" />
                        </div>
                    </div>
                </div>
                <div class="row u-m-t-md">
                    <div class="col s12">
                        <button type="button" class="waves-effect waves-light btn-flat btn-primary" data-position="bottom" data-tooltip="Not implemented!">
                            <i class="material-icons left">check</i>
                            @CouponDatabase.Properties.Resources.Btn_Import
                        </button>
                    </div>
                </div>
            </section>
            <!-- /import -->


        </div>
    </div>
}

<script src="~/js/calendar.js" asp-append-version="true"></script>
<script>
    $(document).ready(function () {
        ///////
        // init date picker
        ///
        $('.calendar').calendar().change(function (e) {
            // validate date format
            // TODO: regex should be changed depending on locale

            var input = $(this);
            var re = /^[0-9]{2}.[0-9]{2}.[0-9]{4}$/;
            var valid = re.test(e.target.value);
            if (valid) {
                input.removeClass("invalid").addClass("valid");
            }
            else {
                input.removeClass("valid").addClass("invalid");
            }
        });
        ///////
        // init form tabs
        ///
        $(".tabs-section").tabs({ swipeable: true });

        ///////
        // emable validation tooltip message
        ///
        $("button[data-position='bottom']").tooltip();

        $(".btn-subtract").click(function () {
            var input = $(this).next(".input-field").children("input");
            var inputVal = input.val();
            if (inputVal == "" || input == 0) {
                input.val(0);
            } else {
                input.val(inputVal - 1);
            }
        });

        $(".btn-add").click(function () {
            var input = $(this).prev(".input-field").children("input");
            var inputVal = input.val();

            if (inputVal == "") {
                input.val(1);
            } else {
                input.val(parseInt(inputVal) + 1);
            }
        });

        ///////
        // file upload
        ///
        var fileInput = $("#file-input");
        var fileBtn = $("#btn-file-input");
        var fileName = $("#file-name");
        var fileNameHolder = $("#file-name-holder");

        // simulate click on input
        fileBtn.click(function () {
            fileInput.click();
        })
        // display name
        fileInput.on('change', function () {
            var name = $(this).val().split('\\').pop();
            var replaceFile = '<i class="material-icons left">file_upload</i>' + '@CouponDatabase.Properties.Resources.Btn_ReplaceFile';
            var btnLabel = fileBtn.html();

            if (name && !btnLabel.includes(replaceFile)) {
                fileBtn.html(replaceFile);
                fileNameHolder.show('slow');
            }
            fileName.val(name);
        })

        // TODO: coupon sample generator
    });

</script>


