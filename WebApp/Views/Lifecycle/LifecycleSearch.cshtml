@model WebApp.ViewModels.LifecycleSearchViewModel;
@{
    ViewData["Title"] = "CouponFilter";
}

@using (Html.BeginForm("Search", "Lifecycle", FormMethod.Post, new { role = "form", id = "PromotionForm" }))
{

    <!-- header -->
    <div class="container">
        <div class="row">
            <h4>
                @CouponDatabase.Properties.Resources.CouponFilter_Search
            </h4>
        </div>
    </div>
    <!-- /header -->

    <!-- form -->
    <div class="form-box">
        <div class="container">
            <!-- top form return msg -->
            <div class="@(ViewBag.CommandStatus == "[ERROR]" ? "form-box__msg form-box__msg-error" : "form-box__msg form-box__msg-success") @(ViewBag.CommandStatus == null ? "hiddendiv" : "")">@ViewBag.CommandStatus  @ViewBag.CommandMessage</div>
            <div class="row">
                <div class="col s12">
                    <h5 class="section u-m-t-remove">Promotion Details Format</h5>
                </div>
            </div>

            <!-- promotion details -->
            <div class="row">
                <div class="input-field date col s6">
                    @Html.EditorFor(p => p.PromotionFilter.Code, new { htmlAttributes = new { @class = "validate", @type = "text", placeholder = "", @autocomplete = "off" } })
                    @Html.LabelFor(p => p.PromotionFilter.Code, new { htmlAttributes = new { @class = "active" } })
                    @*<i class="material-icons suffix validation-error" data-position="bottom" data-tooltip="yo, škagre!">warning</i>*@
                </div>
            </div>
            <div class="row">
                <div class="input-field date col s6">
                    @Html.EditorFor(p => p.PromotionFilter.ValidFrom, new { htmlAttributes = new { @class = "calendar", @type = "text", placeholder = "", @autocomplete = "off" } })
                    @Html.LabelFor(p => p.PromotionFilter.ValidFrom, new { htmlAttributes = new { @class = "active" } })
                    <i class="material-icons suffix">event</i>
                </div>
                <div class="input-field date col s6">
                    @Html.EditorFor(p => p.PromotionFilter.ValidFrom, new { htmlAttributes = new { @class = "calendar", @type = "text", placeholder = "", @autocomplete = "off" } })
                    @Html.LabelFor(p => p.PromotionFilter.ValidFrom, new { htmlAttributes = new { @class = "active" } })
                    <i class="material-icons suffix">event</i>
                </div>
            </div>
            <!-- /promotion details -->
            <!-- properties -->
            <div class="row">
                <div class="col s12">
                    <p class="section-headline u-m-b-remove">@Html.DisplayNameFor(m => m.PromotionFilter.Properties)</p>
                </div>
                <div class="col s12 two-cols">
                    @for (int i = 0; i < Model.PromotionFilter.Properties.Count; i++)
                    {
                        <p class="checkbox-hover">
                            <label>
                                @Html.CheckBoxFor(c => c.PromotionFilter.Properties[i].Checked, new { @class = "filled-in" })
                                <span>@Html.DisplayFor(c => c.PromotionFilter.Properties[i].Label)</span>
                                @Html.HiddenFor(c => c.PromotionFilter.Properties[i].Id)
                                @Html.HiddenFor(c => c.PromotionFilter.Properties[i].Label)
                            </label>
                        </p>
                    }
                </div>
            </div>
            <!-- /properties -->

            <div class="row">
                <div class="col s12">
                    <h5 class="section u-m-t-remove">Coupon Details</h5>
                </div>
            </div>
            <div class="row">
                <div class="input-field date col s6">
                    @Html.EditorFor(p => p.CouponFilter.ValidFrom, new { htmlAttributes = new { @class = "calendar", @type = "text", placeholder = "", @autocomplete = "off" } })
                    @Html.LabelFor(p => p.CouponFilter.ValidFrom, new { htmlAttributes = new { @class = "active" } })
                    <i class="material-icons suffix">event</i>
                </div>
                <div class="input-field date col s6">
                    @Html.EditorFor(p => p.CouponFilter.ValidFrom, new { htmlAttributes = new { @class = "calendar", @type = "text", placeholder = "", @autocomplete = "off" } })
                    @Html.LabelFor(p => p.CouponFilter.ValidFrom, new { htmlAttributes = new { @class = "active" } })
                    <i class="material-icons suffix">event</i>
                </div>
            </div>

            <!-- checkboxes -->
            <div class="row">
                <div class="col s3">
                    <p class="section-headline u-m-b-remove">Issuer Channel</p>
                    @for (int i = 0; i < Model.CouponFilter.IssuerChannels.Count; i++)
                    {
                        <p class="checkbox-hover">
                            <label>
                                @Html.CheckBoxFor(c => c.CouponFilter.IssuerChannels[i].Checked, new { @class = "filled-in" })
                                <span>@Html.DisplayFor(c => c.CouponFilter.IssuerChannels[i].Label)</span>
                                @Html.HiddenFor(c => c.CouponFilter.IssuerChannels[i].Id)
                                @Html.HiddenFor(c => c.CouponFilter.IssuerChannels[i].Label)
                            </label>
                        </p>
                    }
                </div>
                <div class="col s3">
                    <p class="section-headline u-m-b-remove">Award Channel</p>
                    @for (int i = 0; i < Model.CouponFilter.AwardChannels.Count; i++)
                    {
                        <p class="checkbox-hover">
                            <label>
                                @Html.CheckBoxFor(c => c.CouponFilter.AwardChannels[i].Checked, new { @class = "filled-in" })
                                <span>@Html.DisplayFor(c => c.CouponFilter.AwardChannels[i].Label)</span>
                                @Html.HiddenFor(c => c.CouponFilter.AwardChannels[i].Id)
                                @Html.HiddenFor(c => c.CouponFilter.AwardChannels[i].Label)
                            </label>
                        </p>
                    }
                </div>
                <div class="col s3">
                    <p class="section-headline u-m-b-remove">@Html.DisplayNameFor(m => m.CouponFilter.CurrentCouponStatus)</p>
                    @for (int i = 0; i < Model.CouponFilter.CurrentCouponStatus.Count; i++)
                    {
                        <p class="checkbox-hover">
                            <label>
                                @Html.CheckBoxFor(c => c.CouponFilter.CurrentCouponStatus[i].Checked, new { @class = "filled-in" })
                                <span>@Html.DisplayFor(c => c.CouponFilter.CurrentCouponStatus[i].Label)</span>
                                @Html.HiddenFor(c => c.CouponFilter.CurrentCouponStatus[i].Id)
                                @Html.HiddenFor(c => c.CouponFilter.CurrentCouponStatus[i].Label)
                            </label>
                        </p>
                    }
                </div>
                <div class="col s3">
                    <p class="section-headline u-m-b-remove">Active/Inactive</p>
                    <p>
                        <label class="checkbox-hover checkbox-hover__inline u-m-r-md">
                            @Html.CheckBoxFor(f => f.CouponFilter.ShowActive, new { @class = "filled-in", @autocomplete = "off" })
                            <span>@Html.DisplayNameFor(f => f.CouponFilter.ShowActive)</span>
                        </label>
                        <label class="checkbox-hover checkbox-hover__inline">
                            @Html.CheckBoxFor(f => f.CouponFilter.ShowInactive, new { @class = "filled-in", @autocomplete = "off" })
                            <span>@Html.DisplayNameFor(f => f.CouponFilter.ShowInactive)</span>
                        </label>
                    </p>
                </div>
            </div>
            <!-- /checkboxes -->

            <!-- actions -->
            <div class="row u-m-t-xl">
                <div class="col s12">
                    <button type="submit" class="waves-effect waves-light btn-flat btn-primary">
                        <i class="material-icons left">search</i>
                        @CouponDatabase.Properties.Resources.Btn_Search
                    </button>
                </div>
            </div>
            <!-- /actions -->
        </div>
    </div>
    <!-- /form -->
}

<script src="~/js/calendar.js" asp-append-version="true"></script>
<script>
    $(document).ready(function () {
        // init date picker
        $('.calendar').calendar().change(function (e) {
            // validate date format
            // TODO: regex should be changed depending on locale
            var input = $(this);
            var re = /^[0-9]{2}.[0-9]{2}.[0-9]{4}$/;
            var valid = re.test(e.target.value);
            if (valid) {
                input.removeClass("invalid").addClass("valid");
            }
            else {
                input.removeClass("valid").addClass("invalid");
            }

        });

        // emable validation tooltip message
        $('.validation-error').tooltip();
    });

</script>



